name: Update Homebrew Formula

on:
  workflow_dispatch:

jobs:
  update-formula:
    name: Update Homebrew Formula
    runs-on: ubuntu-latest
    env:
      CLI_REPO: PowerShell/DSC

    steps:
      - name: Checkout Homebrew Tap Repo
        uses: actions/checkout@v4

      - name: Get Latest Release Info
        id: get_release
        run: |
          latest_release=$(curl -s "https://api.github.com/repos/${CLI_REPO}/releases/latest")
          echo "RELEASE_JSON=$latest_release" >> $GITHUB_ENV
          echo "TAG_NAME=$(echo "$latest_release" | jq -r '.tag_name')" >> $GITHUB_ENV

      - name: Determine if Release is Preview or Stable
        id: determine_formula
        run: |
          if [[ "${{ env.TAG_NAME }}" == *preview* ]]; then
            echo "FORMULA=dsc-cli-preview.rb" >> $GITHUB_ENV
          else
            echo "FORMULA=dsc-cli.rb" >> $GITHUB_ENV
          fi

      - name: Download Release Assets and Calculate SHA256
        id: calculate_sha
        run: |
          # Extract version without 'v'
          VERSION=${TAG_NAME#v}
          echo "VERSION=$VERSION" >> $GITHUB_ENV

          # Download both architecture files
          curl -L -o arm.tar.gz "https://github.com/${CLI_REPO}/releases/download/${TAG_NAME}/DSC-${VERSION}-aarch64-apple-darwin.tar.gz"
          curl -L -o x86.tar.gz "https://github.com/${CLI_REPO}/releases/download/${TAG_NAME}/DSC-${VERSION}-x86_64-apple-darwin.tar.gz"

          # Calculate SHA256
          ARM_SHA=$(sha256sum arm.tar.gz | awk '{ print $1 }')
          X86_SHA=$(sha256sum x86.tar.gz | awk '{ print $1 }')

          echo "ARM_SHA=$ARM_SHA" >> $GITHUB_ENV
          echo "X86_SHA=$X86_SHA" >> $GITHUB_ENV

      - name: Update Formula File
        run: |
          FORMULA_PATH="./Formula/${FORMULA}"

          # Update version
          sed -i "s/^  version \".*\"/  version \"${VERSION}\"/" "$FORMULA_PATH"

          # Update ARM url and sha256
          sed -i "/aarch64-apple-darwin/ s|url \".*\"|url \"https://github.com/${CLI_REPO}/releases/download/${TAG_NAME}/DSC-${VERSION}-aarch64-apple-darwin.tar.gz\"|" "$FORMULA_PATH"
          sed -i "/aarch64-apple-darwin/,+1 s/sha256 \".*\"/sha256 \"${ARM_SHA}\"/" "$FORMULA_PATH"

          # Update x86 url and sha256
          sed -i "/x86_64-apple-darwin/ s|url \".*\"|url \"https://github.com/${CLI_REPO}/releases/download/${TAG_NAME}/DSC-${VERSION}-x86_64-apple-darwin.tar.gz\"|" "$FORMULA_PATH"
          sed -i "/x86_64-apple-darwin/,+1 s/sha256 \".*\"/sha256 \"${X86_SHA}\"/" "$FORMULA_PATH"

      - name: Test Formula Locally (only on macOS)
        if: runner.os == 'macOS'
        run: |
          brew install --build-from-source "./Formula/${FORMULA}"
          brew test "./Formula/${FORMULA}"

      - name: Info if not on macOS
        if: runner.os != 'macOS'
        run: echo "Skipping brew install because runner is not macOS."

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v6
        with:
          commit-message: "Update ${{ env.FORMULA }} to ${{ env.VERSION }}"
          branch: "update-${{ env.FORMULA }}-${{ env.VERSION }}"
          title: "Update ${{ env.FORMULA }} to ${{ env.VERSION }}"
          body: |
            Automated update for ${{ env.FORMULA }} to ${{ env.VERSION }}.